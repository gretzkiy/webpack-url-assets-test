{"version":3,"file":"main.js","mappings":";;;UAAA;UACA;;UAEA;UACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;;;;ACrBA;;AAEA,kCAAkC,yGAA8B;;AAEhE","sources":["webpack://project/webpack/bootstrap","webpack://project/webpack/runtime/get javascript chunk filename","webpack://project/webpack/runtime/hasOwnProperty shorthand","webpack://project/webpack/runtime/publicPath","webpack://project/webpack/runtime/jsonp chunk loading","webpack://project/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"https://my-cdn.com/path-to-my-build-dist/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","console.log('Hello from the main thread!')\n\nconst worker = new Worker(new URL('./worker.js', import.meta.url));\n\nconsole.log(worker);\n"],"names":[],"sourceRoot":""}